extends layout

block content
  style.
    /* style.css */
    body {
      background-color: rgb(6, 26, 27);
    }

    * {
      box-sizing: border-box;
    }

    .container {
      max-width: 500px;
      margin: 60px auto;
    }

    .container h1 {
      text-align: center;
      color: white;
    }

    form {
      background-color: white;
      padding: 30px;
    }

    form .input-group {
      margin-bottom: 15px;
    }

    form label {
      display: block;
      margin-bottom: 10px;
    }

    form input {
      padding: 12px 20px;
      width: 100%;
      border: 1px solid #ccc;
    }

    .submit-btn {
      width: 100%;
      border: none;
      background: rgb(37, 83, 3);
      font-size: 18px;
      color: white;
      border-radius: 3px;
      padding: 20px;
      text-align: center;
    }

  .container
    h1 File Upload
    form#form
      .input-group
        label(for='file') Select file
        input#file(type='file')
        label(for='file') Language (aka English)
        input#language(type='text')
        label(for='file') Model (aka medium)
        input#model(type='text')
      button.submit-btn(type='submit') Upload

  script.
    l = console.log;
    l('running')

    const uploadPath="#{uploadPath}";

    const form = document.getElementById("form");

    form.addEventListener("submit", submitForm);

    function submitForm(e) {
      e.preventDefault();
      const file = document.getElementById("file");
      const language = document.getElementById("language").value;
      const model = document.getElementById("model").value;
      const formData = new FormData();

      l('file');
      l(file);
      l(file.file);

      formData.append("file", file.files[0]);
      formData.append('language', language);
      formData.append('model', model);


      l(formData);

      fetch(`${uploadPath}/file`, {
        method: 'POST',
        body: formData,
        // headers: {
        //   "Content-Type": "multipart/form-data"
        // }
      })
      .then((res) => console.log(res))
      .catch((err) => ("Error occured", err));
    }

  script.
    (function () {
      const rss = document.getElementById('rss');
      // const heapTotal = document.getElementById('heapTotal');
      // const heapUsed = document.getElementById('heapUsed');
      // const external = document.getElementById('external');
      const ws = new WebSocket(`ws://localhost:3000`);

      ws.onmessage = function (event) {
        const data = JSON.parse(event.data);

        console.log(event.data);

        // rss.textContent = data.rss;
        // heapTotal.textContent = data.heapTotal;
        // heapUsed.textContent = data.heapUsed;
        // external.textContent = data.external;
      };
    })();
